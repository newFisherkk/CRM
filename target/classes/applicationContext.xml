<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context ="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd" >
        
        <!-- 读取jdbc.properties配置 -->
        <context:property-placeholder location="classpath:jdbc.properties"/>
        
        <!-- 创建Datasource数据源 需要dbcp连接池 maxIdle最大空闲数-->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        	<property name="url" value="${jdbc.url}"/>
        	<property name="driverClassName" value="${jdbc.driverClass}"/>
        	<property name="username" value="${jdbc.user}"/>
        	<property name="password" value="${jdbc.password}"/>
        	<property name="maxActive" value="10"/>
        	<property name="maxIdle" value="5"/>
        </bean>
        
        <!-- 创建sqlSessionFactory对象 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        	<!-- 关联连接池  -->
        	<property name="dataSource" ref="dataSource" />
        	<!-- 加载sql映射文件，加载多个sql映射配置则用 *.xml-->
        	<property name="mapperLocations" value="classpath:CustomerMapper.xml"/>
        	<!-- 引入插件 -->
        	<property name="plugins">
        		<array>
        			<!-- mybatis分页插件  pagehelper玩我很久-->
        			<bean class="com.github.pagehelper.PageInterceptor">
        				<property name="properties">
        				<!-- helperDialect连接数据库的类型 --> 
        					<value>
        						helperDialect=mysql
        					</value>
        				</property>
        			</bean>
        		</array>
        	</property>
        </bean>
        
        
        <!-- mapper接口扫描 -->
        <!-- 
        	注意：如果使用Mapper包扫描，那么每个Mapper接口在Spring容器中的id名称为类名，如：CustomerMapper ->customerMapper
         -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        	<!-- 配置Mapper接口所在包路径，会扫描包下所有接口 -->
        	<property name="basePackage" value="com.mapper" />
        </bean>
        
        <!-- 开启spring的IOC注解扫描 ，扫描com包下的所有注解，包括可能添加的controller-->
        <context:component-scan base-package="com"/>
        
        <!-- 开启spring的事务管理器,关联连接池 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        	<property name="dataSource" ref="dataSource" />
        </bean> 
        
        <!-- 开启事物注解 -->
        <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>